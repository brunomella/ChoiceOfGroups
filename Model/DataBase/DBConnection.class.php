<?phpdefine('SERVER', 'localhost');
define('USER', 'root');
define('PASS', '');
define('DB', 'php_grupo');class DBConnection {	private static $db;
	private static $_config = null;
	private $_connection = null;	private function __construct(){	}	public static function getInstance()	{		if(func_num_args() == 4){			self::$_config = func_get_args();		} else {			self::$_config[0] = defined("SERVER") ? SERVER : '';			self::$_config[1] = defined("USER")   ? USER   : '';			self::$_config[2] = defined("PASS")   ? PASS   : '';			self::$_config[3] = defined("DB")     ? DB     : '';		}		if(!(self::$db instanceof DBConnection)){			self::$db = new DBConnection();		}		return self::$db;	}	protected function _connect(){		try {			if ($this->_connection) {				return;			}			if (!extension_loaded('mysqli')) {				throw new Exception(mysqli_connect_error());			}			if(is_array(self::$_config)){				$this->_connection = mysqli_init();				if (!$this->_connection) {					throw new Exception('mysqli_init failed');				}			}			$_isConnected = @mysqli_real_connect(					$this->_connection,					self::$_config[0],					self::$_config[1],					self::$_config[2],					self::$_config[3]			);			$this->_connection->query("SET NAMES utf8");			if ($_isConnected === false || mysqli_connect_errno()) {				throw new Exception(mysqli_connect_error());			}		} catch (Exception $e) {			$erro  = "\t<h1>Ocorreu um erro ao conectar o banco\n</h1>";			$erro .= '<b style="color:red;">'.$e.'</b>';			die(nl2br($erro));		}	}	public function getConnection()	{		$this->_connect();		return $this->_connection;	}	public function isConnected()	{		return ((bool) ($this->_connection instanceof mysqli));	}	public function closeConnection()	{		if ($this->isConnected()) {			$this->_connection->close();		}		$this->_connection = null;	}	public function query($sql = '')	{		if($sql != ''){			$this->_connect();			return $this->_connection->query($sql);		}	}	public function prepare($sql)	{		if($sql != ''){			$this->_connect();			return $this->_connection->prepare($sql);		}	}	public function fetchOne($sql = '')	{		if($sql != ''){			$this->_connect();			$rs = $this->_connection->query($sql);			$re = $rs->fetch_array();			return $re[0];		}	}	public function lastInsertId()	{		$mysqli = $this->_connection;		return (string) $mysqli->insert_id;	}	public function __clone()	{		trigger_error('Não é possivel clonar esta classe!', E_USER_ERROR);	}}
?>